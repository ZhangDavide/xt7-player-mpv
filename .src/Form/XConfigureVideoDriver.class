' Gambas class file

'Copyright (C) 2007, 2008 Antonio Orefice
' Gambas class file

Private Dynagui As New DynaGuiClass
Public AlreadyLoaded As Boolean = False 'true if the form loaded it's settings from disk at least one time

Public Sub btnCancel_Click()
  Me.Close
End

Public Sub FirstLoadIfNeeded()
  If Not AlreadyLoaded Then 
     Alreadyloaded = True
     MenuLoadDefault_Click()
  Endif  
End

Public Sub Form_Open()
  FirstLoadIfNeeded()
  DynaGui.AllowedContainers = ["DriversPanel"]
  Dynagui.ConstrainWidth = CustomBTN.Width
  Dynagui.ConstrainHeight = CustomBTN.Height
  Dynagui.AddSpace = 4
  Dynagui.AddPadding = 12
  DynaGui.YOffset = - Me.Font.Textheight("Ij") * 1.5
  Global.Center(Fmain, Me)
  TabToDescription()
  Me.show()
  Wait 
  Form_Resize()
End

Private Sub TabToDescription()
  Dim obj As Object
  Dim tmp1, tmp2 As String
  For Each obj In DriversPanel.children
      tmp1 = Trim(Upper(Replace(ConfigureTabs.Current.Text, "&", "")))
      tmp2 = Trim(Upper(Replace(obj.text, "&", "")))
      If tmp1 = tmp2
        DriverDescription.text = obj.tag
        Return
      Endif
  Next
End


Public Sub ConfigureTabs_Click()
  TabToDescription()
End

Public Sub VideoDriverList_Click()
  Dim i As Integer
  Dim tmp1, tmp2 As String
  DriverDescription.Text = Last.tag
  If Not Dynagui.ObjDragging Then 'this is necessary to not confuse click and drag events
    For i = 0 To ConfigureTabs.count - 1
      tmp1 = Trim(Upper(Replace(Last.text, "&", "")))
      tmp2 = Trim(Upper(Replace(ConfigureTabs[i].text, "&", "")))
      If tmp1 = tmp2 Then
        ConfigureTabs.index = i
        Return
      Endif
    Next 'i
  Endif
End


Public Sub VideoDriverList_MouseMove()
    DynaGui.MoveObject(Last, Me)
End

Public Sub VideoDriverList_MouseUp()
    Dynagui.SmartInsert(Last, Me)
End

Public Sub VideoDriverList_MouseDrag()
    Dynagui.DetachFrom(Last, Me)
End

Public Sub Form_Resize()
  VSplit1.y = (Style.FrameWidth * 2) + 8
  VSplit1.h = DriverFrame.h - VSplit1.y - (Style.FrameWidth * 2)
  vbox1.h = VSplit1.h
  VSplit1.x = vbox1.x + vbox1.w + 8
  VSplit1.w = DriverFrame.w - VSplit1.x - (Style.FrameWidth * 2)
End

Public Sub CancelBTN_Click()
  Me.hide
End

Public Sub VideoDriverList_MouseDown()
  Try Last.mouse = 18
  VideoDriverList_Click()
End




Public Function ParseOptions(TheContainer As Object, TheOptionKeyword As String) As String

Dim obj, child As Object
Dim outline As String
  For Each obj In TheContainer.controls
    If Upper(obj.name) Like Upper(TheOptionKeyword) & "*" Then
      For Each child In obj.Children
        'IF child.name LIKE "*Chk" THEN 
        If object.type(child) = "CheckBox" Then
          If child.value Then
              outline = outline & child.tag
                If (child.next <> Null) Then
                  If (object.type(child.next) = "ComboBox") Or (object.type(child.next) = "SpinBox") Or (object.type(child.next) = "TextBox") Then
                    If (object.type(child.next) = "ComboBox") Then
                      Try outline = outline & Split(child.NEXT.text, " ")[0]
                        Else
                      Try outline = outline & child.NEXT.text
                      If Error Then Debug "an error occurred, please report this message and what you're doing"
                    Endif
                  Endif
                Endif
                outline = outline & ":"
          Endif
        Endif
      Next
    Endif
  Next
  If outline Like "*:" Then outline = Left(outline, Len(outline) - 1)
  Return outline
End



Public Function parse_driver(driver_name As String, aTabstrip As Tabstrip) As String
  Dim obj, child, container_obj As Object
  Dim tab_index_old As Integer = aTabstrip.index
  Dim outline As String
  
  If Lower(driver_name) Like "custom*" Then
    Return TextBox5cv.text
  Endif

  aTabstrip.index = 0
  While Lower(aTabstrip.Caption) <> driver_name
    Try aTabstrip.index += 1
    If Error Then
      Debug "Could not find the right tab :( "
      Return ""
    Endif
  Wend

  If aTabstrip.Children.count > 0 Then
    If aTabstrip.Children[0] Is Scrollview Then 
      container_obj = aTabstrip.Children[0]
        Else
      container_obj = aTabstrip
    Endif
  
    For Each obj In container_obj.children
      If Upper(obj.name) Like Upper(driver_name) & "*" Then
        For Each child In obj.Children
          'IF child.name LIKE "*Chk" THEN 
          If object.type(child) = "CheckBox" Then
            If child.value Then
                outline = outline & child.tag
                  If (child.next <> Null) Then
                    If (object.type(child.next) = "ComboBox") Or (object.type(child.next) = "SpinBox") Or (object.type(child.next) = "TextBox") Then
                      If (object.type(child.next) = "ComboBox") Then
                        Try outline = outline & Split(child.NEXT.text, " ")[0]
                          Else
                        Try outline = outline & child.NEXT.text
                        If Error Then Debug "an error occurred, please report this message and what you're doing"
                      Endif
                    Endif
                  Endif
                  outline = outline & ":"
            Endif
          Endif
        Next
      Endif
    Next
  Endif
  
  aTabstrip.index = tab_index_old
  If Right(outline) = ":" Then outline = Left(outline, -1)
  If Right(outline) = "" Then 
    Return driver_name
      Else
    Return driver_name & "=" & outline 
  Endif

End











Public Function AddDriver(AlreadyParsedDrivers As String, DriverName As String, driverform As Object) As String
  Dim MyDriverName As String = ""
  Dim VoCmdLine As String = ""

  Dim ParsedOptions As String = ""
  
  MyDriverName = Trim(Upper(Replace(DriverName, "&", "")))
  If mydrivername = "CUSTOM" Then
    TextBox5cv.text = TextBox5cv.text & ","
    VoCmdline = VoCmdline & TextBox5cv.text
    TextBox5cv.text = Left(TextBox5cv.text, Len(TextBox5cv.Text) - 1)
      Else
    ParsedOptions = ParseOptions(driverform, MyDriverName & "ParseMe")
    If Trim(ParsedOptions) <> "" Then     'ie The selected driver has some option configured
      VoCmdline = Vocmdline & Lower(MyDriverName) & ":" & ParsedOptions & ","
        Else
      VoCmdline = Vocmdline & Lower(MyDriverName) & ParsedOptions & ","
    Endif
  Endif
  Return AlreadyParsedDrivers & VoCmdLine
End


Public Function ParsedVideoDriver(driverform As Object) As String
  Dim driver As Object
  Dim ParsedVoCmdLine As String = ""
  For Each driver In DriversPanel.children
    If Object.Type(driver) = "CheckBox" Then
      If driver.enabled Then
        If driver.value Then
          ParsedVoCmdLine = AddDriver(ParsedVoCmdLine, driver.text, driverform)
        Endif
      Endif
    Endif
  Next
  If Trim(ParsedVoCmdLine) <> "" Then
    Return ParsedVoCmdLine
      Else
    Return Null
  Endif
End


Public Sub OkBTN_Click()
  If global.FromChains Then
    Chains.Show
    global.FromChains = False
  Endif
  Me.hide
  Wait 0.1
  If FMain.mplayer.ProcessRunningOvr() Then FMain.VideoBox.SetFocus()
End



Public Sub ApplyBTN_Click()
  FMain.Apply()
End

Public Sub GoChainsBTN_Click()
  Chains.Show
  Me.hide
End

Public Sub MenuLoadDefault_Click()
  Dim MySettings As New SettingsClass
  MySettings.Load(Me, global.confpath & "/" & global.CurrentProfile)
  Alreadyloaded = True
  'FMain.cachedopts = "" 'fixmempv se vuoi reimplementare le cachedopts
End

Public Sub MenuSaveDefault_Click()
  SaveCurrent()
End
Public Sub SaveBTN_Click()
  SaveCurrent()
End
Public Sub SaveCurrent()
  Dim MySettings As New SettingsClass
  MySettings.Save(Me, global.confpath & "/" & global.CurrentProfile)
End

Public Sub MenuSaveToAll_Click()
  Dim profilename, profilenamesplitted As String
  Dim MySettings As New SettingsClass
  If MyQuestion.Ask(("This will save this window settings\n to all profiles found but the 'Factory_defaults' one"), ("Proceed"), ("Don't")) = 2 Then
    Return
      Else
     For Each profilename In Dir(global.confpath & "/", "*.profile")
        If Stat(global.confpath & "/" & profilename, True).type = gb.Directory Then
          profilenamesplitted = Split(profilename, ".")[0]
          If profilenamesplitted <> "Factory_Defaults" Then
            MySettings.Save(Me, global.confpath & "/" & profilenamesplitted)
          Endif
        Endif
     Next 'profilename
  Endif
End

Public Sub Form_Close()
  If FMain.mplayer.ProcessRunningOvr() Then FMain.VideoBox.setfocus()

End

Public Sub Form_Hide()
  If FMain.mplayer.ProcessRunningOvr() Then FMain.VideoBox.setfocus()
End



Public Sub DriversPanel_Enter()

  Try Last.mouse = 17

End

Public Sub DriversPanel_Leave()

  Try Last.mouse = mouse.default

End

Public Sub DriversPanel_MouseDown()

  Try Last.mouse = 18

End




Public Sub xvScrollview_Arrange()

  Shell "xvinfo -short | grep -i adaptor" To TextBoxAdaptorsxv.text
  TextBoxAdaptorsxv.text = ("Adaptors list:\n---------------------------------\n") & TextBoxAdaptorsxv.text

End

Public Sub CheckBox2gl_Click()
  If Last.value Then CheckBox3gl.value = False
End

Public Sub CheckBox3gl_Click()
  If Last.value Then CheckBox2gl.value = False
End
